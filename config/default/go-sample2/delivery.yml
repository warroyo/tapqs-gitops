apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-sample2
  annotations: null
  kapp.k14s.io/update-strategy: fallback-on-replace
  ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
  labels:
    app.kubernetes.io/part-of: go-sample
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server-with-volumes
    app.kubernetes.io/component: run
    carto.run/workload-name: go-sample2
spec:
  selector: null
  matchLabels:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: go-sample
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server-with-volumes
    carto.run/workload-name: go-sample2
  template:
    metadata:
      annotations:
        conventions.carto.run/applied-conventions: appliveview-sample/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: go-sample
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: server-with-volumes
        carto.run/workload-name: go-sample2
    spec:
      containers:
      - image: dev.registry.pivotal.io/warroyo/go-sample2-default@sha256:c890ccee5052605850766201768263c88f36f3babed8b8e9e05d8326e821df78
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - mountPath: /etc/config
          name: config-vol
      serviceAccountName: default
      volumes:
      - configMap:
          items:
          - key: log_level
            path: log_level
          name: log-config
        name: config-vol
---
apiVersion: v1
kind: Service
metadata:
  name: go-sample2
  labels:
    app.kubernetes.io/part-of: go-sample
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server-with-volumes
    app.kubernetes.io/component: run
    carto.run/workload-name: go-sample2
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: go-sample
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server-with-volumes
    carto.run/workload-name: go-sample2
  ports:
  - targetPort: 8080
    port: 8080
    name: http

